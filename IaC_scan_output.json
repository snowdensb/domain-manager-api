{
    "check_type": "dockerfile",
    "results": {
        "passed_checks": [
            {
                "check_id": "CKV_DOCKER_1",
                "bc_check_id": "BC_DKR_1",
                "check_name": "Ensure port 22 is not exposed",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM golang:1.16.6-alpine AS build\n"
                    ],
                    [
                        2,
                        "\n"
                    ],
                    [
                        3,
                        "WORKDIR /src/\n"
                    ],
                    [
                        4,
                        "COPY /src/staticgen/ /src/\n"
                    ],
                    [
                        5,
                        "RUN CGO_ENABLED=0 GOOS=linux go build -o /bin/main\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM python:3.9.6\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "ENV PYTHONDONTWRITEBYTECODE 1\n"
                    ],
                    [
                        10,
                        "ENV PYTHONUNBUFFERED 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "RUN apt-get update -y && \\\n"
                    ],
                    [
                        13,
                        "    apt-get install -y python-pip python-dev\n"
                    ],
                    [
                        14,
                        "\n"
                    ],
                    [
                        15,
                        "WORKDIR /var/www/\n"
                    ],
                    [
                        16,
                        "\n"
                    ],
                    [
                        17,
                        "ADD ./requirements.txt /var/www/requirements.txt\n"
                    ],
                    [
                        18,
                        "RUN pip install --upgrade pip \\\n"
                    ],
                    [
                        19,
                        "    pip install -r requirements.txt\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "ADD ./src/ /var/www/\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "ENV PYTHONPATH \"${PYTHONPATH}:/var/www\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "# Get static gen build\n"
                    ],
                    [
                        26,
                        "COPY --from=build /bin/main /bin/main\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "# Entrypoint\n"
                    ],
                    [
                        29,
                        "COPY ./etc/entrypoint.sh /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        30,
                        "RUN chmod a+x /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "EXPOSE 5000\n"
                    ],
                    [
                        33,
                        "EXPOSE 80\n"
                    ],
                    [
                        34,
                        "EXPOSE 443\n"
                    ],
                    [
                        35,
                        "\n"
                    ],
                    [
                        36,
                        "ENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/domain-manager-api/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    36
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.ExposePort22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-port-22-is-not-exposed"
            },
            {
                "check_id": "CKV_DOCKER_7",
                "bc_check_id": "BC_DKR_7",
                "check_name": "Ensure the base image uses a non latest version tag",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM golang:1.16.6-alpine AS build\n"
                    ],
                    [
                        2,
                        "\n"
                    ],
                    [
                        3,
                        "WORKDIR /src/\n"
                    ],
                    [
                        4,
                        "COPY /src/staticgen/ /src/\n"
                    ],
                    [
                        5,
                        "RUN CGO_ENABLED=0 GOOS=linux go build -o /bin/main\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM python:3.9.6\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "ENV PYTHONDONTWRITEBYTECODE 1\n"
                    ],
                    [
                        10,
                        "ENV PYTHONUNBUFFERED 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "RUN apt-get update -y && \\\n"
                    ],
                    [
                        13,
                        "    apt-get install -y python-pip python-dev\n"
                    ],
                    [
                        14,
                        "\n"
                    ],
                    [
                        15,
                        "WORKDIR /var/www/\n"
                    ],
                    [
                        16,
                        "\n"
                    ],
                    [
                        17,
                        "ADD ./requirements.txt /var/www/requirements.txt\n"
                    ],
                    [
                        18,
                        "RUN pip install --upgrade pip \\\n"
                    ],
                    [
                        19,
                        "    pip install -r requirements.txt\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "ADD ./src/ /var/www/\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "ENV PYTHONPATH \"${PYTHONPATH}:/var/www\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "# Get static gen build\n"
                    ],
                    [
                        26,
                        "COPY --from=build /bin/main /bin/main\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "# Entrypoint\n"
                    ],
                    [
                        29,
                        "COPY ./etc/entrypoint.sh /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        30,
                        "RUN chmod a+x /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "EXPOSE 5000\n"
                    ],
                    [
                        33,
                        "EXPOSE 80\n"
                    ],
                    [
                        34,
                        "EXPOSE 443\n"
                    ],
                    [
                        35,
                        "\n"
                    ],
                    [
                        36,
                        "ENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/domain-manager-api/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    36
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.ReferenceLatestTag",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-the-base-image-uses-a-non-latest-version-tag"
            },
            {
                "check_id": "CKV_DOCKER_5",
                "bc_check_id": "BC_DKR_4",
                "check_name": "Ensure update instructions are not use alone in the Dockerfile",
                "check_result": {
                    "result": "PASSED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM golang:1.16.6-alpine AS build\n"
                    ],
                    [
                        2,
                        "\n"
                    ],
                    [
                        3,
                        "WORKDIR /src/\n"
                    ],
                    [
                        4,
                        "COPY /src/staticgen/ /src/\n"
                    ],
                    [
                        5,
                        "RUN CGO_ENABLED=0 GOOS=linux go build -o /bin/main\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM python:3.9.6\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "ENV PYTHONDONTWRITEBYTECODE 1\n"
                    ],
                    [
                        10,
                        "ENV PYTHONUNBUFFERED 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "RUN apt-get update -y && \\\n"
                    ],
                    [
                        13,
                        "    apt-get install -y python-pip python-dev\n"
                    ],
                    [
                        14,
                        "\n"
                    ],
                    [
                        15,
                        "WORKDIR /var/www/\n"
                    ],
                    [
                        16,
                        "\n"
                    ],
                    [
                        17,
                        "ADD ./requirements.txt /var/www/requirements.txt\n"
                    ],
                    [
                        18,
                        "RUN pip install --upgrade pip \\\n"
                    ],
                    [
                        19,
                        "    pip install -r requirements.txt\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "ADD ./src/ /var/www/\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "ENV PYTHONPATH \"${PYTHONPATH}:/var/www\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "# Get static gen build\n"
                    ],
                    [
                        26,
                        "COPY --from=build /bin/main /bin/main\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "# Entrypoint\n"
                    ],
                    [
                        29,
                        "COPY ./etc/entrypoint.sh /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        30,
                        "RUN chmod a+x /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "EXPOSE 5000\n"
                    ],
                    [
                        33,
                        "EXPOSE 80\n"
                    ],
                    [
                        34,
                        "EXPOSE 443\n"
                    ],
                    [
                        35,
                        "\n"
                    ],
                    [
                        36,
                        "ENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/domain-manager-api/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    36
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.UpdateNotAlone",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-update-instructions-are-not-used-alone-in-the-dockerfile"
            }
        ],
        "failed_checks": [
            {
                "check_id": "CKV_DOCKER_4",
                "bc_check_id": "BC_DKR_5",
                "check_name": "Ensure that COPY is used instead of ADD in Dockerfiles",
                "check_result": {
                    "result": "FAILED",
                    "results_configuration": {
                        "instruction": "ADD",
                        "startline": 16,
                        "endline": 16,
                        "content": "ADD ./requirements.txt /var/www/requirements.txt\n",
                        "value": "./requirements.txt /var/www/requirements.txt"
                    }
                },
                "code_block": [
                    [
                        17,
                        "ADD ./requirements.txt /var/www/requirements.txt\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/domain-manager-api/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    17,
                    17
                ],
                "resource": "/Dockerfile.ADD",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.AddExists",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-copy-is-used-instead-of-add-in-dockerfiles"
            },
            {
                "check_id": "CKV_DOCKER_2",
                "bc_check_id": "BC_DKR_2",
                "check_name": "Ensure that HEALTHCHECK instructions have been added to container images",
                "check_result": {
                    "result": "FAILED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM golang:1.16.6-alpine AS build\n"
                    ],
                    [
                        2,
                        "\n"
                    ],
                    [
                        3,
                        "WORKDIR /src/\n"
                    ],
                    [
                        4,
                        "COPY /src/staticgen/ /src/\n"
                    ],
                    [
                        5,
                        "RUN CGO_ENABLED=0 GOOS=linux go build -o /bin/main\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM python:3.9.6\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "ENV PYTHONDONTWRITEBYTECODE 1\n"
                    ],
                    [
                        10,
                        "ENV PYTHONUNBUFFERED 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "RUN apt-get update -y && \\\n"
                    ],
                    [
                        13,
                        "    apt-get install -y python-pip python-dev\n"
                    ],
                    [
                        14,
                        "\n"
                    ],
                    [
                        15,
                        "WORKDIR /var/www/\n"
                    ],
                    [
                        16,
                        "\n"
                    ],
                    [
                        17,
                        "ADD ./requirements.txt /var/www/requirements.txt\n"
                    ],
                    [
                        18,
                        "RUN pip install --upgrade pip \\\n"
                    ],
                    [
                        19,
                        "    pip install -r requirements.txt\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "ADD ./src/ /var/www/\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "ENV PYTHONPATH \"${PYTHONPATH}:/var/www\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "# Get static gen build\n"
                    ],
                    [
                        26,
                        "COPY --from=build /bin/main /bin/main\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "# Entrypoint\n"
                    ],
                    [
                        29,
                        "COPY ./etc/entrypoint.sh /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        30,
                        "RUN chmod a+x /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "EXPOSE 5000\n"
                    ],
                    [
                        33,
                        "EXPOSE 80\n"
                    ],
                    [
                        34,
                        "EXPOSE 443\n"
                    ],
                    [
                        35,
                        "\n"
                    ],
                    [
                        36,
                        "ENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/domain-manager-api/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    36
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.HealthcheckExists",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-healthcheck-instructions-have-been-added-to-container-images"
            },
            {
                "check_id": "CKV_DOCKER_3",
                "bc_check_id": "BC_DKR_3",
                "check_name": "Ensure that a user for the container has been created",
                "check_result": {
                    "result": "FAILED",
                    "results_configuration": null
                },
                "code_block": [
                    [
                        1,
                        "FROM golang:1.16.6-alpine AS build\n"
                    ],
                    [
                        2,
                        "\n"
                    ],
                    [
                        3,
                        "WORKDIR /src/\n"
                    ],
                    [
                        4,
                        "COPY /src/staticgen/ /src/\n"
                    ],
                    [
                        5,
                        "RUN CGO_ENABLED=0 GOOS=linux go build -o /bin/main\n"
                    ],
                    [
                        6,
                        "\n"
                    ],
                    [
                        7,
                        "FROM python:3.9.6\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "ENV PYTHONDONTWRITEBYTECODE 1\n"
                    ],
                    [
                        10,
                        "ENV PYTHONUNBUFFERED 1\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "RUN apt-get update -y && \\\n"
                    ],
                    [
                        13,
                        "    apt-get install -y python-pip python-dev\n"
                    ],
                    [
                        14,
                        "\n"
                    ],
                    [
                        15,
                        "WORKDIR /var/www/\n"
                    ],
                    [
                        16,
                        "\n"
                    ],
                    [
                        17,
                        "ADD ./requirements.txt /var/www/requirements.txt\n"
                    ],
                    [
                        18,
                        "RUN pip install --upgrade pip \\\n"
                    ],
                    [
                        19,
                        "    pip install -r requirements.txt\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "ADD ./src/ /var/www/\n"
                    ],
                    [
                        22,
                        "\n"
                    ],
                    [
                        23,
                        "ENV PYTHONPATH \"${PYTHONPATH}:/var/www\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "# Get static gen build\n"
                    ],
                    [
                        26,
                        "COPY --from=build /bin/main /bin/main\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "# Entrypoint\n"
                    ],
                    [
                        29,
                        "COPY ./etc/entrypoint.sh /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        30,
                        "RUN chmod a+x /usr/local/bin/entrypoint.sh\n"
                    ],
                    [
                        31,
                        "\n"
                    ],
                    [
                        32,
                        "EXPOSE 5000\n"
                    ],
                    [
                        33,
                        "EXPOSE 80\n"
                    ],
                    [
                        34,
                        "EXPOSE 443\n"
                    ],
                    [
                        35,
                        "\n"
                    ],
                    [
                        36,
                        "ENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
                    ]
                ],
                "file_path": "/Dockerfile",
                "file_abs_path": "/tmp/ws-scm/domain-manager-api/Dockerfile",
                "repo_file_path": "/Dockerfile",
                "file_line_range": [
                    1,
                    36
                ],
                "resource": "/Dockerfile.",
                "evaluations": null,
                "check_class": "checkov.dockerfile.checks.UserExists",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-a-user-for-the-container-has-been-created"
            }
        ],
        "skipped_checks": [],
        "parsing_errors": []
    },
    "summary": {
        "passed": 3,
        "failed": 3,
        "skipped": 0,
        "parsing_errors": 0,
        "resource_count": 1,
        "checkov_version": "2.0.707"
    },
    "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
}
